package server;

import java.util.*;

import javax.swing.JTree;
import javax.swing.table.*;
import javax.swing.tree.*;

public class ServerDisplay extends javax.swing.JFrame {

    /**
     * Creates new form ServerDisplay
     */
    public ServerDisplay(server s) {
    	this.mainserver = s;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {


        usersL = new javax.swing.JLabel();
        roomL = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        roomTree = new javax.swing.JTree(room);

        jScrollPane3 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        logL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        kickbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(605, 623));
        setResizable(false);
        
        usersL.setText("Users");

        roomL.setText("Rooms");

        //javax.swing.tree.DefaultMutableTreeNode root = new javax.swing.tree.DefaultMutableTreeNode("root");
        //roomTree.setModel(new javax.swing.tree.DefaultTreeModel(root));
        roomTree.setRootVisible(false);
        jScrollPane2.setViewportView(roomTree);
        
        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane3.setViewportView(logArea);

        logL.setText("Server Log");

        user.setColumnIdentifiers(new Object [] { "User", "ID", "Status" });
        userTable.setModel(user);
        jScrollPane1.setViewportView(userTable);
        userTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);


        kickbutton.setText("Kick User");
        kickbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kickbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(usersL)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(roomL)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                            .addComponent(kickbutton))
                        .addComponent(jScrollPane2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(logL)
                            .addGap(0, 274, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usersL)
                        .addComponent(logL))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(roomL)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(kickbutton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane3))
                    .addContainerGap())
        );

        pack();
    }// </editor-fold>          

    private void IPFieldActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }           
    private void kickbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    	int id;
        id = userTable.getSelectedRow();
        System.out.println(id);
        offlineUser(id);
        mainserver.kick(id);
    }     
    public void showLog(String msg){
    	logArea.append((new Date()).toString() + "\n");
    	logArea.append(msg + "\n");
    }
    public void adduser(String username,int id){
    	user.addRow(new Object[]{username,id,"On line"});
    }
    public void offlineUser(int id){
    	user.setValueAt("Off line", id, 2);
    }
    public void addroom(String roomname,int roomID){
    	DefaultMutableTreeNode tmp = new DefaultMutableTreeNode(roomname);
    	DefaultMutableTreeNode root = (DefaultMutableTreeNode) room.getRoot();
    	room.insertNodeInto(tmp, root, root.getChildCount());
    	room.reload();
    	System.out.println("finished addroom");
    }
    public void addroomuser(int roomid, String username){
    	DefaultMutableTreeNode root = (DefaultMutableTreeNode) room.getRoot();
    	DefaultMutableTreeNode destrm = (DefaultMutableTreeNode) room.getChild(root, roomid-1);
    	DefaultMutableTreeNode tmp = new DefaultMutableTreeNode(username);
    	room.insertNodeInto(tmp, destrm, destrm.getChildCount());
    	System.out.println("finished adduser");
    	room.reload();
    }
    public void deleteroomuser(int roomid, int userid){
    	System.out.println(roomid + " " +userid);
    	DefaultMutableTreeNode root = (DefaultMutableTreeNode) room.getRoot();
    	DefaultMutableTreeNode destrm = (DefaultMutableTreeNode) room.getChild(root, roomid-1);
    	System.out.println("im here");
    	DefaultMutableTreeNode tmp = (DefaultMutableTreeNode) room.getChild(destrm, userid);
    	room.removeNodeFromParent(tmp);
    	room.reload();    	
    }

    private server mainserver;
    private DefaultTableModel user = new DefaultTableModel();
	private MutableTreeNode treeroot = new DefaultMutableTreeNode("treeroot");
    private DefaultTreeModel room = new DefaultTreeModel(treeroot);
    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton kickbutton;
    private javax.swing.JTextArea logArea;
    private javax.swing.JLabel logL;
    private javax.swing.JLabel roomL;
    private javax.swing.JTree roomTree;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel usersL;
    // End of variables declaration                   
}
